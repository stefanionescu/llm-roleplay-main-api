version: '3.8'
services:
    api:
        build: .
        ports:
            - '3000:3000'
        environment:
            - NODE_ENV=production
            - API_TOKEN=${API_TOKEN}
            - AUTHED_ALLOWED_IPS=${AUTHED_ALLOWED_IPS}
            - SUPABASE_URL=${SUPABASE_URL}
            - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
            - UV_THREADPOOL_SIZE=32
            - NODE_OPTIONS="--max-old-space-size=10240"
            - ONNX_BACKEND=cpu
            - TRANSFORMERS_CACHE="/app/.cache"
            - TOKENIZERS_PARALLELISM=true
            - SECURE_COOKIES=true
            - REDIS_REST_URL=${REDIS_REST_URL}
            - REDIS_REST_PORT=${REDIS_REST_PORT}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        deploy:
            resources:
                limits:
                    memory: 10G
        volumes:
            - model_cache:/app/.cache
        networks:
            - monitoring_network
        restart: always
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
            interval: 60s
            timeout: 20s
            retries: 3
            start_period: 80s
        logging:
            driver: 'json-file'
            options:
                max-size: '500m'
                max-file: '3'

    nginx:
        image: nginx:alpine
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
            - ./ssl:/etc/nginx/ssl:ro
        networks:
            - monitoring_network
        deploy:
            resources:
                limits:
                    memory: 2G
        restart: always
        depends_on:
            - api

volumes:
    model_cache:

networks:
    monitoring_network:
        driver: bridge
